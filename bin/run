#!/usr/bin/env ruby
# encoding: UTF-8

$:.unshift File.expand_path('../../lib', __FILE__)
require 'bundler/setup'

require 'json'
require 'open3'
require 'log_processor'
require 'bash'
require 'craftbelt'

include Bash

STDOUT.sync = true
STDIN.sync = true

data_file = File.expand_path(ENV['DATAFILE'])
$build = File.expand_path('../..', __FILE__)

env = Craftbelt::Env.new('.', $build)
env.write_player_files
env.write_templates(
  'server.properties.erb' => 'server.properties',
)

$ftb_ver = '5.2.1'
$ftb = File.join $build, "ftb-#{$ftb_ver}"

puts JSON.dump(
  ts: Time.now.utc.iso8601,
  event: 'info',
  msg: "Using Feed The Beast v#{$ftb_ver}"
)

# setup working directory
bash <<-EOS
  rm -rf mods
  rm -rf coremods
  rm -rf config

  cp #{$ftb}/ftbserver.jar .
  cp -R #{$ftb}/coremods .
  cp -R #{$ftb}/mods .
  cp -R #{$ftb}/config .
EOS

Open3.popen3("java",
            "-Xms#{env.ram}M", "-Xmx#{env.ram}M",
            "-jar", "ftbserver.jar",
            "nogui") do |stdin, stdout, stderr, wait_thr|

  processor = LogProcessor.new(wait_thr.pid, env.settings.schema)

  begin
    Thread.new do
      while true
        input = STDIN.readline.strip

        case input
        when 'list'
          stdin.puts 'save-all'
          stdin.puts 'list'

        else
          stdin.puts input
        end
      end
    end

    while true
      line = stderr.readline

      begin
        event = processor.process_line line
        if !event.nil?
          puts JSON.dump(event)
        end

      rescue => e
        puts JSON.dump(
          ts: Time.now.utc.iso8601,
          event: 'process_line_failed',
          error: e,
          line: line
        )
      end
    end
  rescue EOFError
  end
  exit_status = wait_thr.value
  puts JSON.dump(
    ts: Time.now.utc.iso8601,
    event: 'info',
    msg: "Process exited #{exit_status.exitstatus}"
  )
end

